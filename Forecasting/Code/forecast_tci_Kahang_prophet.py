# -*- coding: utf-8 -*-
"""Forecast TCI 97234_Prophet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18YaOIa574JEBCBWxoL4kPHKBOiVe7iSW
"""

pip install pystan==2.18.0.0

pip install prophet

# Commented out IPython magic to ensure Python compatibility.
import gc
from tqdm import tqdm
import numpy as np
import pandas as pd
from pylab import rcParams
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error
from scipy.stats import probplot
import datetime as dt
from datetime import date
from datetime import timedelta
from prophet import Prophet
# %matplotlib inline
import os
import warnings
warnings.filterwarnings("ignore")

data0=pd.read_excel("/content/97234.xlsx")

data0.head()

drop=data0[data0['TCI']==-99.0].index.tolist()
data0=data0.drop(index=drop).reset_index(drop=True)

date=[]
for y,m,d in zip(data0['Year'],data0['Month'],data0['Day']):
    date+=[dt.datetime(y,m,d).strftime('%Y-%m-%d')]
data0['Date']=date
data0

data2=data0[['Date','TCI']].reset_index(drop=True)
data2

item1=data2

item1.columns = ['ds','y']
item1.y = item1.y.astype('float')
item1.ds = item1.ds.astype('datetime64')

rcParams['figure.figsize'] = 20,5
plt.title("Pos Pengamatan Geofisika Kahang", fontdict=None, loc='center', pad=None)
plt.plot(item1.ds, item1.y)

ph = Prophet(daily_seasonality=True)
ph.fit(item1)
forecast1=ph.predict(item1)
figure = ph.plot(forecast1)
figure.show()

from datetime import timedelta
start0 = dt.datetime.strptime('2020-01-01','%Y-%m-%d').date()
end0   = dt.datetime.strptime('2023-02-16','%Y-%m-%d').date()
print((end0-start0).days)

def daterange(start,end):
    for i in range((end-start).days):
        return start+timedelta(i)

dates0=[]
for i in range((end0-start0).days):
    dates0+=[(start0+timedelta(i)).strftime('%Y-%m-%d') ]
print(dates0[0:10])

dates0_df=pd.DataFrame(dates0)
dates0_df.columns=['ds']
dates0_df

ph = Prophet(daily_seasonality=True)
ph.fit(item1)
forecast3=ph.predict(dates0_df)
figure = ph.plot(forecast3)
figure.show()

ph = Prophet(daily_seasonality=True)
ph.fit(data2[-365*3:])
forecast3=ph.predict(dates0_df)
figure = ph.plot(forecast3)
plt.title('forecast')
figure.show()

forecast3[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(7)

future_dates = ph.make_future_dataframe(periods = 6*7)

print("First week to forecast.")
future_dates.tail(7)

forecast = ph.predict(future_dates)
forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(7)

ph.plot(forecast);